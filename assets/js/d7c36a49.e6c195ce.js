"use strict";(globalThis.webpackChunkdocs=globalThis.webpackChunkdocs||[]).push([[3320],{999:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"guides/deployment-local","title":"Local Deployment","description":"Set up Bethrou locally for development and testing: prerequisites, installation, running client and nodes, debugging, and local network configuration.","source":"@site/docs/guides/deployment-local.md","sourceDirName":"guides","slug":"/guides/deployment-local","permalink":"/docs/guides/deployment-local","draft":false,"unlisted":false,"editUrl":"https://github.com/bethrou/bethrou/tree/main/docs/docs/guides/deployment-local.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Local Deployment","description":"Set up Bethrou locally for development and testing: prerequisites, installation, running client and nodes, debugging, and local network configuration.","keywords":["local deployment","development","testing","setup","prerequisites","debugging"],"image":"../../img/bethrou-icon.svg"},"sidebar":"docsSidebar","previous":{"title":"Configuration","permalink":"/docs/guides/configuration"},"next":{"title":"Docker Deployment","permalink":"/docs/guides/deployment-docker"}}');var t=i(4848),l=i(8453);const r={sidebar_position:2,title:"Local Deployment",description:"Set up Bethrou locally for development and testing: prerequisites, installation, running client and nodes, debugging, and local network configuration.",keywords:["local deployment","development","testing","setup","prerequisites","debugging"],image:"../../img/bethrou-icon.svg"},o="Local Deployment",d={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Setup Steps",id:"setup-steps",level:2},{value:"0. Clone the Repository",id:"0-clone-the-repository",level:3},{value:"1. Generate Network Key",id:"1-generate-network-key",level:3},{value:"2. Start Exit Node",id:"2-start-exit-node",level:3},{value:"3. Configure Client",id:"3-configure-client",level:3},{value:"4. Start Client",id:"4-start-client",level:3},{value:"5. Test Connection",id:"5-test-connection",level:3},{value:"With Redis Discovery",id:"with-redis-discovery",level:2},{value:"Start Redis",id:"start-redis",level:3},{value:"Start Node with Discovery",id:"start-node-with-discovery",level:3},{value:"Start Client with Discovery",id:"start-client-with-discovery",level:3},{value:"Multiple Nodes",id:"multiple-nodes",level:2},{value:"Development Tips",id:"development-tips",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"&quot;Address already in use&quot;",id:"address-already-in-use",level:3},{value:"&quot;Cannot find network.key&quot;",id:"cannot-find-networkkey",level:3},{value:"&quot;Connection refused&quot;",id:"connection-refused",level:3},{value:"Next Steps",id:"next-steps",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"local-deployment",children:"Local Deployment"})}),"\n",(0,t.jsx)(n.p,{children:"Guide for deploying Bethrou locally for development and testing."}),"\n",(0,t.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Go 1.24.7+"}),"\n",(0,t.jsx)(n.li,{children:"OpenSSL (for key generation)"}),"\n",(0,t.jsx)(n.li,{children:"Git"}),"\n",(0,t.jsx)(n.li,{children:"Optional: Redis (for discovery)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"setup-steps",children:"Setup Steps"}),"\n",(0,t.jsx)(n.h3,{id:"0-clone-the-repository",children:"0. Clone the Repository"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/bethrou/bethrou.git\ncd bethrou\n"})}),"\n",(0,t.jsx)(n.h3,{id:"1-generate-network-key",children:"1. Generate Network Key"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'echo "/key/swarm/psk/1.0.0/" > network.key\necho "/base16/" >> network.key\nopenssl rand -hex 32 >> network.key\nchmod 600 network.key\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-start-exit-node",children:"2. Start Exit Node"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd node\ngo run main.go start --listen /ip4/127.0.0.1/tcp/4000\n"})}),"\n",(0,t.jsx)(n.p,{children:"Note the Peer ID from the output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"INFO  Peer ID: 12D3KooWRmF8HJnQyW4pqVx...\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-configure-client",children:"3. Configure Client"}),"\n",(0,t.jsxs)(n.p,{children:["Create ",(0,t.jsx)(n.code,{children:"client/client.yaml"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'key: "network.key"\n\nserver:\n  listen: "127.0.0.1:1080"\n  auth: false\n\nrouting:\n  strategy: random\n  health: 30s\n  timeout: 10s\n\nnodes:\n  - id: 12D3KooWRmF8HJnQyW4pqVx...  # Use your Peer ID\n    addrs:\n      - /ip4/127.0.0.1/tcp/4000/p2p/12D3KooWRmF8HJnQyW4pqVx...\n\ndiscovery:\n  enabled: false\n\nlog:\n  level: debug\n  format: text\n'})}),"\n",(0,t.jsx)(n.h3,{id:"4-start-client",children:"4. Start Client"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd client\ngo run main.go connect --config client.yaml\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-test-connection",children:"5. Test Connection"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"curl --socks5 127.0.0.1:1080 https://ifconfig.me\n"})}),"\n",(0,t.jsx)(n.h2,{id:"with-redis-discovery",children:"With Redis Discovery"}),"\n",(0,t.jsx)(n.h3,{id:"start-redis",children:"Start Redis"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Using Docker\ndocker run -d -p 6379:6379 --name redis redis:alpine\n\n# Or install locally\nbrew install redis  # macOS\nsudo apt install redis-server  # Ubuntu\n"})}),"\n",(0,t.jsx)(n.h3,{id:"start-node-with-discovery",children:"Start Node with Discovery"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd node\ngo run main.go start \\\n  --listen /ip4/127.0.0.1/tcp/4000 \\\n  --discover \\\n  --discover-address redis://localhost:6379 \\\n  --discover-topic bethrou-local\n"})}),"\n",(0,t.jsx)(n.h3,{id:"start-client-with-discovery",children:"Start Client with Discovery"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd client\ngo run main.go connect \\\n  --discover \\\n  --discover-address redis://localhost:6379 \\\n  --discover-topic bethrou-local\n"})}),"\n",(0,t.jsx)(n.h2,{id:"multiple-nodes",children:"Multiple Nodes"}),"\n",(0,t.jsx)(n.p,{children:"Run multiple nodes on different ports:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Node 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd node\ngo run main.go start --listen /ip4/127.0.0.1/tcp/4000\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Node 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cd node\ngo run main.go start --listen /ip4/127.0.0.1/tcp/4001\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Client config:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"nodes:\n  - id: <node1-peer-id>\n    addrs:\n      - /ip4/127.0.0.1/tcp/4000/p2p/<node1-peer-id>\n  - id: <node2-peer-id>\n    addrs:\n      - /ip4/127.0.0.1/tcp/4001/p2p/<node2-peer-id>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"development-tips",children:"Development Tips"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use debug logging"})," for troubleshooting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Keep terminals organized"})," (one for node, one for client)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Watch logs"})," for connection status"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test with curl"})," before browser"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Redis CLI"})," to monitor discovery"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,t.jsx)(n.h3,{id:"address-already-in-use",children:'"Address already in use"'}),"\n",(0,t.jsx)(n.p,{children:"Port is occupied:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"lsof -i :4000\n# Use different port or kill process\n"})}),"\n",(0,t.jsx)(n.h3,{id:"cannot-find-networkkey",children:'"Cannot find network.key"'}),"\n",(0,t.jsx)(n.p,{children:"Ensure network.key exists in both directories:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"cp network.key node/\ncp network.key client/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"connection-refused",children:'"Connection refused"'}),"\n",(0,t.jsx)(n.p,{children:"Node might not be running:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Check if node is listening\nnetstat -an | grep 4000\n"})}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/guides/deployment-docker",children:"Docker Deployment"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/guides/configuration",children:"Configuration Guide"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"/docs/guides/nat-traversal",children:"NAT Traversal"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}}}]);